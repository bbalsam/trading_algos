USE Stock;

Declare @tick varchar(10)
SET @tick = 'SPY';

WITH STEP1 AS
(
SELECT
	dtDate
	,strTick
	,decHigh
	,decLow
	,decOpen
	,decAdjClose
	,(decHigh+decLow+decAdjClose)/3 AS TypicalPrice
	,((decHigh+decLow+decAdjClose)/3)*intVol AS TypcialPricexVol
	,intVol
	,SUM(CAST(intVol as decimal)) OVER (PARTITION BY strTick ORDER BY dtDate ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) AS CUMVOL12
	,SUM(CAST(intVol as decimal)) OVER (PARTITION BY strTick ORDER BY dtDate ROWS BETWEEN 19 PRECEDING AND CURRENT ROW) AS CUMVOL20
	,SUM(CAST(intVol as decimal)) OVER (PARTITION BY strTick ORDER BY dtDate ROWS BETWEEN 25 PRECEDING AND CURRENT ROW) AS CUMVOL26
	,LAG(decAdjClose,1) OVER (PARTITION BY strTick ORDER BY dtDate) AS PREV_CLOSE
FROM
	STOCKS
WHERE
	dtDate > '2020-01-01'
	--AND strTick = @tick
GROUP BY
	dtDate
	,strTick
	,decHigh
	,decLow
	,decOpen
	,decAdjClose
	,intVol
/*ORDER BY
	dtDate ASC*/
)

,STEP2 AS
(
SELECT
*
,CUMVOL26 - CUMVOL12 AS VWAP_MACD
,SUM(TypcialPricexVol) OVER (PARTITION BY strTick ORDER BY dtDate ROWS BETWEEN 19 PRECEDING AND CURRENT ROW) AS CUMTPA20
,CASE
	WHEN decHigh-decLow > ABS(decHigh - PREV_CLOSE)
		AND decHigh-decLow > ABS(decLow - PREV_CLOSE)
	THEN decHigh-decLow
	WHEN ABS(decHigh - PREV_CLOSE) > decHigh-decLow
		AND ABS(decHigh - PREV_CLOSE) > ABS(decLow - PREV_CLOSE)
	THEN ABS(decHigh - PREV_CLOSE)
	ELSE ABS(decLow - PREV_CLOSE)
END AS TRUE_RANGE
FROM
STEP1
)

,STEP3 AS
(
SELECT
*
,AVG(VWAP_MACD) OVER (PARTITION BY strTick ORDER BY dtDate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW) AS VWAP_MACD_SIGNAL_LINE_9
,CASE WHEN CUMVOL20 = 0
	THEN 0
	ELSE CUMTPA20/CUMVOL20
END AS VWAP
,AVG(TRUE_RANGE) OVER (PARTITION BY strTick ORDER BY dtDate ROWS BETWEEN 19 PRECEDING AND CURRENT ROW) AS ATR
FROM
STEP2
)

,STEP4 AS
(
SELECT
*
,VWAP+(2*STDEV(decAdjClose) OVER (PARTITION BY strTick ORDER BY dtDate ROWS BETWEEN 19 PRECEDING AND CURRENT ROW)) AS VWAP_BOLL_HIGH
,VWAP-(2*STDEV(decAdjClose) OVER (PARTITION BY strTick ORDER BY dtDate ROWS BETWEEN 19 PRECEDING AND CURRENT ROW)) AS VWAP_BOLL_LOW
,VWAP+(2*ATR) AS VWAP_KELT_HIGH
,VWAP-(2*ATR) AS VWAP_KELT_LOW
,AVG(VWAP) OVER (PARTITION BY strTIck ORDER BY dtDate ROWS BETWEEN 199 PRECEDING AND CURRENT ROW) AS VWAP200
,(VWAP+(2*STDEV(decAdjClose) OVER (PARTITION BY strTick ORDER BY dtDate ROWS BETWEEN 19 PRECEDING AND CURRENT ROW)))/
	(VWAP-(2*STDEV(decAdjClose) OVER (PARTITION BY strTick ORDER BY dtDate ROWS BETWEEN 19 PRECEDING AND CURRENT ROW)))-
	(VWAP+(2*ATR))/(VWAP-(2*ATR)) AS SQUEEZE_SIGNAL
FROM
STEP3
)

SELECT
	dtDate
	,strTick
	,decAdjClose
	,VWAP
	,VWAP_BOLL_HIGH
	,VWAP_BOLL_LOW
	,VWAP_KELT_HIGH
	,VWAP_KELT_LOW
	,VWAP200
	,SQUEEZE_SIGNAL
	,VWAP_MACD
	,VWAP_MACD_SIGNAL_LINE_9
FROM
STEP4
WHERE
	dtDate >= '2022-11-30'
	AND SQUEEZE_SIGNAL < 0
	AND decAdjClose > VWAP200